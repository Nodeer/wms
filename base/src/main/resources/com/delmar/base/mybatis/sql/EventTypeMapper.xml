<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.base.mybatis.sql.EventTypeMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.base.model.EventType" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="ShortCode" property="shortcode" jdbcType="VARCHAR" />
    <result column="FullName" property="fullname" jdbcType="VARCHAR" />
    <result column="NewState" property="newstate" jdbcType="INTEGER" />
    <result column="InternalOnly" property="internalonly" jdbcType="INTEGER" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="createdby" property="createdby" jdbcType="INTEGER" />
    <result column="createdbyname" property="createdbyname" jdbcType="VARCHAR" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="updatedby" property="updatedby" jdbcType="INTEGER" />
    <result column="updatedbyname" property="updatedbyname" jdbcType="VARCHAR" />
    <result column="indexorder" property="indexorder" jdbcType="INTEGER"/>
    <result column="eventtypestatus" property="eventtypestatus" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
    			<if test="eventtypestatus!=null"> and eventtypestatus=#{eventtypestatus,jdbcType=INTEGER} </if>
                 <if test="accessString!=null"> and ${accessString} </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, ShortCode, FullName, NewState, InternalOnly, client_id, org_id, user_id, user_name, 
    created, createdby, createdbyname, updated, updatedby, updatedbyname,indexorder,eventtypestatus 
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from Base_EventType
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Base_EventType
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Base_EventType
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from Base_EventType
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.base.model.EventType" useGeneratedKeys="true" keyProperty="id" >
    insert into Base_EventType (ShortCode, FullName, NewState, 
      InternalOnly, client_id, org_id, 
      user_id, user_name, created, 
      createdby, createdbyname, updated, 
      updatedby, updatedbyname,indexorder,eventtypestatus)
    values (#{shortcode,jdbcType=VARCHAR}, #{fullname,jdbcType=VARCHAR}, #{newstate,jdbcType=INTEGER}, 
      #{internalonly,jdbcType=INTEGER}, #{clientId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{createdby,jdbcType=INTEGER}, #{createdbyname,jdbcType=VARCHAR}, #{updated,jdbcType=TIMESTAMP}, 
      #{updatedby,jdbcType=INTEGER}, #{updatedbyname,jdbcType=VARCHAR},#{indexorder,jdbcType=INTEGER}
      ,#{eventtypestatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.delmar.base.model.EventType" useGeneratedKeys="true" keyProperty="id" >
    insert into Base_EventType
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shortcode != null" >
        ShortCode,
      </if>
      <if test="fullname != null" >
        FullName,
      </if>
      <if test="newstate != null" >
        NewState,
      </if>
      <if test="internalonly != null" >
        InternalOnly,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="createdby != null" >
        createdby,
      </if>
      <if test="createdbyname != null" >
        createdbyname,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="updatedby != null" >
        updatedby,
      </if>
      <if test="updatedbyname != null" >
        updatedbyname,
      </if>
      <if test="indexorder!=null">
      	indexorder,
      </if>
      <if test="eventtypestatus!=null">
      	eventtypestatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shortcode != null" >
        #{shortcode,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null" >
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="newstate != null" >
        #{newstate,jdbcType=INTEGER},
      </if>
      <if test="internalonly != null" >
        #{internalonly,jdbcType=INTEGER},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=INTEGER},
      </if>
      <if test="createdbyname != null" >
        #{createdbyname,jdbcType=VARCHAR},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null" >
        #{updatedby,jdbcType=INTEGER},
      </if>
      <if test="updatedbyname != null" >
        #{updatedbyname,jdbcType=VARCHAR},
      </if>
            <if test="indexorder!=null">
      	#{indexorder,jdbcType=INTEGER},
      </if>
      <if test="eventtypestatus!=null">
      	#{eventtypestatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from Base_EventType
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.base.model.EventType" >
    update Base_EventType
    <set >
      <if test="shortcode != null" >
        ShortCode = #{shortcode,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null" >
        FullName = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="newstate != null" >
        NewState = #{newstate,jdbcType=INTEGER},
      </if>
      <if test="internalonly != null" >
        InternalOnly = #{internalonly,jdbcType=INTEGER},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        createdby = #{createdby,jdbcType=INTEGER},
      </if>
      <if test="createdbyname != null" >
        createdbyname = #{createdbyname,jdbcType=VARCHAR},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null" >
        updatedby = #{updatedby,jdbcType=INTEGER},
      </if>
      <if test="updatedbyname != null" >
        updatedbyname = #{updatedbyname,jdbcType=VARCHAR},
      </if>
                  <if test="indexorder!=null">
      	indexorder=#{indexorder,jdbcType=INTEGER},
      </if>
        <if test="eventtypestatus!=null">
      	eventtypestatus=#{eventtypestatus,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delmar.base.model.EventType" >
    update Base_EventType
    set ShortCode = #{shortcode,jdbcType=VARCHAR},
      FullName = #{fullname,jdbcType=VARCHAR},
      NewState = #{newstate,jdbcType=INTEGER},
      InternalOnly = #{internalonly,jdbcType=INTEGER},
      client_id = #{clientId,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      createdby = #{createdby,jdbcType=INTEGER},
      createdbyname = #{createdbyname,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP},
      updatedby = #{updatedby,jdbcType=INTEGER},
      updatedbyname = #{updatedbyname,jdbcType=VARCHAR},
      indexorder=#{indexorder,jdbcType=INTEGER},
      eventtypestatus=#{eventtypestatus,jdbcType=INTEGER} 
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>