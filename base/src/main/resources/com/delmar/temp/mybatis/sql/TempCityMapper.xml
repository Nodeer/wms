<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.temp.mybatis.sql.TempCityMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.temp.model.TempCity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="NVARCHAR" />
    <result column="parent_code" property="parentCode" jdbcType="VARCHAR" />
    <result column="city_level" property="cityLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
     <where>
        <if test="code!=null"> and code=  #{code,jdbcType=VARCHAR} </if>    
        <if test="accessString!=null"> ${accessString} </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, name, parent_code, city_level
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from temp_city
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from temp_city
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from temp_city
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from temp_city
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.temp.model.TempCity" useGeneratedKeys="true" keyProperty="id" >
    insert into temp_city (code, name, parent_code, 
      city_level)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=NVARCHAR}, #{parentCode,jdbcType=VARCHAR}, 
      #{cityLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.delmar.temp.model.TempCity" useGeneratedKeys="true" keyProperty="id" >
    insert into temp_city
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentCode != null" >
        parent_code,
      </if>
      <if test="cityLevel != null" >
        city_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentCode != null" >
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="cityLevel != null" >
        #{cityLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from temp_city
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.temp.model.TempCity" >
    update temp_city
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=NVARCHAR},
      </if>
      <if test="parentCode != null" >
        parent_code = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="cityLevel != null" >
        city_level = #{cityLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delmar.temp.model.TempCity" >
    update temp_city
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=NVARCHAR},
      parent_code = #{parentCode,jdbcType=VARCHAR},
      city_level = #{cityLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>