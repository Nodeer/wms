<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.corebus.mybatis.sql.TransactionMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.corebus.model.Transaction" >
    <id column="transno" property="transno" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="r_rate_master_id" property="rRateMasterId" jdbcType="INTEGER" />
    <result column="provider_id" property="providerId"  jdbcType="INTEGER" />
    
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="createdby" property="createdBy" jdbcType="INTEGER" />
    <result column="createdbyName" property="createdByName" jdbcType="VARCHAR" />    
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="updatedby" property="updatedBy" jdbcType="INTEGER" />
    <result column="updatedbyName" property="updatedByName" jdbcType="VARCHAR" />    
             
    <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.delmar.corebus.model.TransactionWithBLOBs" extends="BaseResultMap" >
    <result column="tranparam" property="tranparam" jdbcType="LONGVARCHAR" />
    <result column="transresult" property="transresult" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMap2"  type="com.delmar.corebus.model.Transaction" >
    	<association property="ratemaster" column="r_rate_master_id" select="com.delmar.rate.mybatis.sql.RatemasterMapper.selectByPrimaryKey" ></association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      	<if test="accessString!=null"> and ${accessString} </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    transno, id, created, createdby,createdbyName, updated, updatedby,updatedbyname, r_rate_master_id,client_id,org_id,user_id,user_name,provider_id,totalAmount 
  </sql>
  <sql id="Blob_Column_List" >
    tranparam, transresult
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectMaxTransno" parameterType="java.lang.String" resultType="java.lang.String">
  		select max(transno) from b_transaction where transno like '%${value}%'
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from b_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByPrimaryKey2" resultMap="ResultMap2" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_transaction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_transaction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_transaction
    where transno = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from b_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.corebus.model.Transaction" useGeneratedKeys="true" keyProperty="id" >
    insert into b_transaction (transno, created, createdby,createdbyName,
      updated, updatedby,updatedbyname, r_rate_master_id, 
      tranparam, transresult,client_id,org_id,user_id,user_name,provider_id,totalAmount)
    values (#{transno,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER},#{createdByName,jdbcType=VARCHAR}, 
      #{updated,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER},#{updatedByName,jdbcType=VARCHAR}, #{rRateMasterId,jdbcType=INTEGER}, 
      #{tranparam,jdbcType=LONGVARCHAR}, #{transresult,jdbcType=LONGVARCHAR},
      #{clientId,jdbcType=INTEGER},#{orgId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER},#{userName,jdbcType=VARCHAR},
      #{providerId,jdbcType=INTEGER},#{totalAmount,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.delmar.corebus.model.Transaction" useGeneratedKeys="true" keyProperty="id" >
    insert into b_transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transno != null" >
        transno,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="createdBy != null" >
        createdby,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="updatedBy != null" >
        updatedBy,
      </if>
      <if test="rRateMasterId != null" >
        r_rate_master_id,
      </if>
      <if test="tranparam != null" >
        tranparam,
      </if>
      <if test="transresult != null" >
        transresult,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
       <if test="orgId != null" >
        org_id,
      </if>
       <if test="userId != null" >
        user_id,
      </if>
       <if test="userName != null" >
        user_name,
      </if>      
       <if test="createdByName != null" >
        createdByName,
      </if>
       <if test="updatedByName != null" >
        updatedByName,
      </if>
       <if test="providerId != null" >
        provider_id,
      </if>
      <if test="totalAmount!=null">
      totalAmount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transno != null" >
        #{transno,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="rRateMasterId != null" >
        #{rRateMasterId,jdbcType=INTEGER},
      </if>
      <if test="tranparam != null" >
        #{tranparam,jdbcType=LONGVARCHAR},
      </if>
      <if test="transresult != null" >
        #{transresult,jdbcType=LONGVARCHAR},
      </if>
        <if test="clientId != null" >
         #{clientId,jdbcType=INTEGER},
      </if>
       <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
       <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
       <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>      
       <if test="createdByName != null" >
         #{createdByName,jdbcType=VARCHAR},
      </if>
       <if test="updatedByName != null" >
        #{updatedByName,jdbcType=VARCHAR},
      </if>
       <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
       <if test="totalAmount!=null">
          #{totalAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from b_transaction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.corebus.model.Transaction" >
    update b_transaction
    <set >
      <if test="transno != null" >
        transno = #{transno,jdbcType=VARCHAR},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updatedBy = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="rRateMasterId != null" >
        r_rate_master_id = #{rRateMasterId,jdbcType=INTEGER},
      </if>
      <if test="tranparam != null" >
        tranparam = #{tranparam,jdbcType=LONGVARCHAR},
      </if>
      <if test="transresult != null" >
        transresult = #{transresult,jdbcType=LONGVARCHAR},
      </if>
       <if test="updatedByName != null" >
        updatedByname=#{updatedByName,jdbcType=VARCHAR},
      </if>
       <if test="providerId != null" >
        provider_id=#{providerId,jdbcType=INTEGER},
      </if>
      <if test="totalAmount!=null">
          totalAmount=#{totalAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.delmar.corebus.model.Transaction" >
    update b_transaction
    set transno = #{transno,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP},
      updatedby = #{updatedBy,jdbcType=INTEGER},
      r_rate_master_id = #{rRateMasterId,jdbcType=INTEGER},
      tranparam = #{tranparam,jdbcType=LONGVARCHAR},
      transresult = #{transresult,jdbcType=LONGVARCHAR},
       updatedByName=#{updatedByName,jdbcType=VARCHAR},
       provider_id=#{providerId,jdbcType=INTEGER},
          totalAmount=#{totalAmount,jdbcType=DECIMAL}
    where   id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delmar.corebus.model.Transaction" >
    update b_transaction
    set id = #{id,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      updatedby = #{updatedBy,jdbcType=INTEGER},
      r_rate_master_id = #{rRateMasterId,jdbcType=INTEGER},
       updatedbyname=#{updatedByName,jdbcType=VARCHAR},
       provider_id=#{providerId,jdbcType=INTEGER},
       totalAmount=#{totalAmount,jdbcType=DECIMAL} 
    where  id = #{id,jdbcType=INTEGER}
  </update>
</mapper>