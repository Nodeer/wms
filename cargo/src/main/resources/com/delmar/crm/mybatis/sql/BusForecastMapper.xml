<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.crm.mybatis.sql.BusForecastMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.crm.model.BusForecast"  extends="com.delmar.common.mybatis.sql.CommonMapper.BusCoreResultMap">
    <id column="id" property="id" jdbcType="INTEGER" />
	<result column="busForecast_Id" property="busForecastId" jdbcType="VARCHAR" />
	<result column="customer_Id" property="customerId" jdbcType="INTEGER" />
	<result column="outIn" property="outIn" jdbcType="INTEGER" />
	<result column="planeOcean" property="planeOcean" jdbcType="VARCHAR" />
	<result column="polId" property="polId" jdbcType="INTEGER" />
	<result column="poaId" property="poaId" jdbcType="INTEGER" />
	<result column="goodsDesc" property="goodsDesc" jdbcType="VARCHAR" />
	<result column="goodsWeight" property="goodsWeight" jdbcType="DECIMAL" />
	<result column="goodsSize" property="goodsSize" jdbcType="DECIMAL" />
	<result column="teuNum" property="teuNum" jdbcType="INTEGER" />
	<result column="fromDate" property="fromDate" jdbcType="TIMESTAMP" />
	<result column="toDate" property="toDate" jdbcType="TIMESTAMP" />
	<result column="currency_Id" property="currencyId" jdbcType="INTEGER" />
	<result column="linkrecord_Id" property="linkRecordId" jdbcType="INTEGER" />
	<result column="profit" property="profit" jdbcType="DECIMAL" />
	<result column="remark" property="remark" jdbcType="VARCHAR" />

    <!-- 
    <association property="pol" column="polId" select="com.delmar.base.mybatis.sql.PortMapper.selectByPrimaryKey" ></association>
    <association property="poa" column="poaId" select="com.delmar.base.mybatis.sql.PortMapper.selectByPrimaryKey" ></association>    
    <association property="currency" column="currency_Id" select="com.delmar.base.mybatis.sql.CurrencyMapper.selectByPrimaryKey" ></association>
    <association property="customer" column="customer_Id" select="com.delmar.crm.mybatis.sql.CustomerMapper.selectByPrimaryKey" ></association>
     -->

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
     	<if test="accessString!=null"> and ${accessString} </if>
     	<if test="linkRecordId!=null"> and linkrecord_id=#{linkRecordId,jdbcType=INTEGER}  </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
      id,busforecast_id,customer_Id,outIn,planeOcean,polId,poaId,goodsDesc,goodsWeight,goodsSize,
      teuNum,fromDate,toDate,currency_Id,linkrecord_id,profit,remark,flag,client_id,org_id,user_id,user_Name,
      created,createdBy,createdByName,updated,updatedBy,updatedByName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from b_crm_busforecast
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByLinkRecordId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from b_crm_busforecast
     where linkRecord_id = #{linkRecordId,jdbcType=INTEGER} 
  </select>
  
    
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_crm_busforecast
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectFieldsByPrimaryKey" resultMap="BaseResultMap"  parameterType="java.util.Map">
    select  
    <if test="columns == null" >
      <include refid="Base_Column_List" />
    </if>
    <if test="columns != null" >
       ${columns}
    </if>    
    from b_crm_busforecast
    where id =  #{id,jdbcType=INTEGER}
  </select>  
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_crm_busforecast
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from b_crm_busforecast
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.crm.model.BusForecast" useGeneratedKeys="true" keyProperty="id" >
    insert into b_crm_busforecast (busforecast_id,customer_Id,outIn,planeOcean,polId,poaId,
    goodsDesc,goodsWeight,goodsSize,teuNum,fromDate,toDate,currency_Id,linkrecord_id,
    profit,remark,flag,client_id,org_id,user_id,user_Name,created,createdBy,
    createdByName,updated,updatedBy,updatedByName)
    values (#{busForecastId,jdbcType=VARCHAR},#{customerId,jdbcType=INTEGER},#{outIn,jdbcType=INTEGER},
    #{planeOcean,jdbcType=VARCHAR},#{polId,jdbcType=INTEGER},#{poaId,jdbcType=INTEGER},
    #{goodsDesc,jdbcType=VARCHAR},#{goodsWeight,jdbcType=DECIMAL},#{goodsSize,jdbcType=DECIMAL},
    #{teuNum,jdbcType=INTEGER},#{fromDate,jdbcType=TIMESTAMP},#{toDate,jdbcType=TIMESTAMP},
    #{currencyId,jdbcType=INTEGER},#{linkRecordId,jdbcType=INTEGER},#{profit,jdbcType=DECIMAL},
    #{remark,jdbcType=VARCHAR},#{flag,jdbcType=INTEGER},
    #{clientId,jdbcType=INTEGER},#{orgId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER},
    #{userName,jdbcType=VARCHAR},#{created,jdbcType=TIMESTAMP},#{createdBy,jdbcType=INTEGER},
    #{createdByName,jdbcType=VARCHAR},#{updated,jdbcType=TIMESTAMP},
    #{updatedBy,jdbcType=INTEGER},#{updatedByName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.delmar.crm.model.BusForecast" useGeneratedKeys="true" keyProperty="id" >
    insert into b_crm_busforecast
    <trim prefix="(" suffix=")" suffixOverrides="," >
		 <if test="busForecastId != null">
		busForecast_Id,
		</if>    
		 <if test="customerId != null">
		customer_Id,
		</if>
		<if test="outIn != null">
		outIn,
		</if>
		<if test="planeOcean != null">
		planeOcean,
		</if>
		<if test="polId != null">
		polId,
		</if>
		<if test="poaId != null">
		poaId,
		</if>
		<if test="goodsDesc != null">
		goodsDesc,
		</if>
		<if test="goodsWeight != null">
		goodsWeight,
		</if>
		<if test="goodsSize != null">
		goodsSize,
		</if>
		<if test="teuNum != null">
		teuNum,
		</if>
		<if test="fromDate != null">
		fromDate,
		</if>
		<if test="toDate != null">
		toDate,
		</if>
		<if test="currencyId != null">
		currency_Id,
		</if>
		<if test="linkRecordId != null">
		linkRecord_Id,
		</if>		
		<if test="profit != null">
		profit,
		</if>
		<if test="remark != null">
		remark,
		</if>		
		<if test="flag != null">
		flag,
		</if>
		<if test="clientId != null">
		client_id,
		</if>
		<if test="orgId != null">
		org_id,
		</if>
		<if test="userId != null">
		user_id,
		</if>
		<if test="userName != null">
		user_Name,
		</if>
		<if test="created != null">
		created,
		</if>
		<if test="createdBy != null">
		createdBy,
		</if>
		<if test="createdByName != null">
		createdByName,
		</if>
		<if test="updated != null">
		updated,
		</if>
		<if test="updatedBy != null">
		updatedBy,
		</if>
		<if test="updatedByName != null">
		updatedByName,
		</if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
	 <if test="busForecastId != null">
		#{busForecastId,jdbcType=VARCHAR},
		</if>    
	 <if test="customerId != null">
		#{customerId,jdbcType=INTEGER},
		</if>
		<if test="outIn != null">
		#{outIn,jdbcType=INTEGER},
		</if>
		<if test="planeOcean != null">
		#{planeOcean,jdbcType=VARCHAR},
		</if>
		<if test="polId != null">
		#{polId,jdbcType=INTEGER},
		</if>
		<if test="poaId != null">
		#{poaId,jdbcType=INTEGER},
		</if>
		<if test="goodsDesc != null">
		#{goodsDesc,jdbcType=DECIMAL},
		</if>
		<if test="goodsWeight != null">
		#{goodsWeight,jdbcType=DECIMAL},
		</if>
		<if test="goodsSize != null">
		#{goodsSize,jdbcType=DECIMAL},
		</if>
		<if test="teuNum != null">
		#{teuNum,jdbcType=INTEGER},
		</if>
		<if test="fromDate != null">
		#{fromDate,jdbcType=TIMESTAMP},
		</if>
		<if test="toDate != null">
		#{toDate,jdbcType=TIMESTAMP},
		</if>
		<if test="currencyId != null">
		#{currencyId,jdbcType=INTEGER},
		</if>
		<if test="linkRecordId != null">
		#{linkRecordId,jdbcType=INTEGER},
		</if>		
		<if test="profit != null">
		#{profit,jdbcType=DECIMAL},
		</if>
		<if test="remark != null">
		#{remark,jdbcType=VARCHAR},
		</if>		
		<if test="flag != null">
		#{flag,jdbcType=INTEGER},
		</if>
		<if test="clientId != null">
		#{clientId,jdbcType=INTEGER},
		</if>
		<if test="orgId != null">
		#{orgId,jdbcType=INTEGER},
		</if>
		<if test="userId != null">
		#{userId,jdbcType=INTEGER},
		</if>
		<if test="userName != null">
		#{userName,jdbcType=VARCHAR},
		</if>
		<if test="created != null">
		#{created,jdbcType=TIMESTAMP},
		</if>
		<if test="createdBy != null">
		#{createdBy,jdbcType=INTEGER},
		</if>
		<if test="createdByName != null">
		#{createdByName,jdbcType=VARCHAR},
		</if>
		<if test="updated != null">
		#{updated,jdbcType=TIMESTAMP},
		</if>
		<if test="updatedBy != null">
		#{updatedBy,jdbcType=INTEGER},
		</if>
		<if test="updatedByName != null">
		#{updatedByName,jdbcType=VARCHAR},
		</if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from b_crm_busforecast
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.crm.model.BusForecast" >
    update b_crm_busforecast
    <set >
		<if test="busForecastId != null">
		busForecast_Id = #{busForecastId,jdbcType=VARCHAR},
		</if>    
		<if test="customerId != null">
		customer_Id = #{customerId,jdbcType=INTEGER},
		</if>
		<if test="outIn != null">
		outIn = #{outIn,jdbcType=INTEGER},
		</if>
		<if test="planeOcean != null">
		planeOcean = #{planeOcean,jdbcType=VARCHAR},
		</if>
		<if test="polId != null">
		polId = #{polId,jdbcType=INTEGER},
		</if>
		<if test="poaId != null">
		poaId = #{poaId,jdbcType=INTEGER},
		</if>
		<if test="goodsDesc != null">
		goodsDesc = #{goodsDesc,jdbcType=DECIMAL},
		</if>
		<if test="goodsWeight != null">
		goodsWeight = #{goodsWeight,jdbcType=DECIMAL},
		</if>
		<if test="goodsSize != null">
		goodsSize = #{goodsSize,jdbcType=DECIMAL},
		</if>
		<if test="teuNum != null">
		teuNum = #{teuNum,jdbcType=INTEGER},
		</if>
		<if test="fromDate != null">
		fromDate = #{fromDate,jdbcType=TIMESTAMP},
		</if>
		<if test="toDate != null">
		toDate = #{toDate,jdbcType=TIMESTAMP},
		</if>
		<if test="currencyId != null">
		currency_Id = #{currencyId,jdbcType=INTEGER},
		</if>
		<if test="linkRecordId != null">
		linkRecord_Id = #{linkRecordId,jdbcType=INTEGER},
		</if>		
		<if test="profit != null">
		profit = #{profit,jdbcType=DECIMAL},
		</if>
		<if test="remark != null">
		remark = #{remark,jdbcType=VARCHAR},
		</if>		
		<if test="flag != null">
		flag = #{flag,jdbcType=INTEGER},
		</if>
		<if test="updated != null">
		updated = #{updated,jdbcType=TIMESTAMP},
		</if>
		<if test="updatedBy != null">
		updatedBy = #{updatedBy,jdbcType=INTEGER},
		</if>
		<if test="updatedByName != null">
		updatedByName = #{updatedByName,jdbcType=VARCHAR},
		</if>

    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delmar.crm.model.BusForecast" >
    update b_crm_busforecast
    set busForecast_Id = #{busForecastId,jdbcType=VARCHAR},
        customer_Id = #{customerId,jdbcType=INTEGER},
		outIn = #{outIn,jdbcType=INTEGER},
		planeOcean = #{planeOcean,jdbcType=VARCHAR},
		polId = #{polId,jdbcType=INTEGER},
		poaId = #{poaId,jdbcType=INTEGER},
		goodsDesc = #{goodsDesc,jdbcType=DECIMAL},
		goodsWeight = #{goodsWeight,jdbcType=DECIMAL},
		goodsSize = #{goodsSize,jdbcType=DECIMAL},
		teuNum = #{teuNum,jdbcType=INTEGER},
		fromDate = #{fromDate,jdbcType=TIMESTAMP},
		toDate = #{toDate,jdbcType=TIMESTAMP},
		currency_Id = #{currencyId,jdbcType=INTEGER},
		linkRecord_Id = #{linkRecordId,jdbcType=INTEGER},
		profit = #{profit,jdbcType=DECIMAL},
		remark = #{remark,jdbcType=VARCHAR},
		flag = #{flag,jdbcType=INTEGER},
		updated = #{updated,jdbcType=TIMESTAMP},
		updatedBy = #{updatedBy,jdbcType=INTEGER},
		updatedByName = #{updatedByName,jdbcType=VARCHAR}

    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>