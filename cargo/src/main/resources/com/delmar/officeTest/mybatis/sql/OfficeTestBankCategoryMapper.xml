<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.officeTest.mybatis.sql.OfficeTestBankCategoryMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.officeTest.model.OfficeTestBankCategory" extends="com.delmar.common.mybatis.sql.CommonMapper.BusCoreResultMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="NVARCHAR" />
    <result column="name" property="name" jdbcType="NVARCHAR" />
    <result column="remark" property="remark" jdbcType="NVARCHAR" />
    <result column="testbank_id" property="testBankId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      	<if test="accessString!=null"> 	 <![CDATA[ ${accessString} ]]>  </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, name, remark, testbank_id
   
  </sql>
  
	<select id="selectNameById"  resultType="java.lang.String" parameterType="java.lang.Integer"  >
	   select name from office_TestBank_Category where id = #{id,jdbcType=INTEGER}
	</select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <if test="topnumber!=null" >
       ${topnumber}
    </if>        
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <if test="columns != null" >
        ${columns}
    </if>
    
    <if test="columns == null" >
       <include refid="Base_Column_List" />
    </if>    
    
    from office_TestBank_Category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
    
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from office_TestBank_Category
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByFatherKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from office_TestBank_Category
    where testbank_id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey"  parameterType="java.lang.Integer" >
    delete from office_TestBank_Category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from office_TestBank_Category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.officeTest.model.OfficeTestBankCategory" useGeneratedKeys="true" keyProperty="id" >
    insert into office_TestBank_Category (code, name, remark, testbank_id)
    values (#{code,jdbcType=NVARCHAR}, #{name,jdbcType=NVARCHAR}, 
      #{remark,jdbcType=NVARCHAR}, #{testBankId,jdbcType=INTEGER})
  </insert>
  
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from office_TestBank_Category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.delmar.officeTest.model.OfficeTestBankCategory" >
    update office_TestBank_Category
    set code = #{code,jdbcType=NVARCHAR},
      name = #{name,jdbcType=NVARCHAR},
      remark = #{remark,jdbcType=NVARCHAR},
      testbank_id = #{testBankId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.officeTest.model.OfficeTestBankCategory" >
    update office_TestBank_Category
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=NVARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=NVARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=NVARCHAR},
      </if>
      <if test="remark != null" >
        testbank_id = #{testBankId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>