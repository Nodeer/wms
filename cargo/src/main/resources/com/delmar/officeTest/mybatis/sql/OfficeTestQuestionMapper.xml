<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.officeTest.mybatis.sql.OfficeTestQuestionMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.officeTest.model.OfficeTestQuestion" extends="com.delmar.common.mybatis.sql.CommonMapper.BusCoreResultMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="NVARCHAR" />
    <result column="OptionOne" property="optionOne" jdbcType="NVARCHAR" />
    
    <result column="OptionTwo" property="optionTwo" jdbcType="NVARCHAR" />
    <result column="OptionThree" property="optionThree" jdbcType="NVARCHAR" />
    <result column="OptionFour" property="optionFour" jdbcType="NVARCHAR" />
    <result column="OptionFive" property="optionFive" jdbcType="NVARCHAR" />
    <result column="Answer" property="answer" jdbcType="NVARCHAR" />
    <result column="Point" property="point" jdbcType="INTEGER" />
    <result column="Remark" property="remark" jdbcType="NVARCHAR" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="NVARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdBy" jdbcType="INTEGER" />
    <result column="createdByName" property="createdByName" jdbcType="NVARCHAR" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="updatedBy" property="updatedBy" jdbcType="INTEGER" />
    <result column="updatedByName" property="updatedByName" jdbcType="NVARCHAR" />
    <result column="testbank_id" property="testBankId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    
    <association property="officeTestBankCategory" column="category_id" select="com.delmar.officeTest.mybatis.sql.OfficeTestBankCategoryMapper.selectByPrimaryKey"></association>    
    <association property="officeTestBank" column="testbank_id" select="com.delmar.officeTest.mybatis.sql.OfficeTestBankMapper.selectByPrimaryKey"></association>    
    
    <collection property="officeTestExamDetails" select="com.delmar.officeTest.mybatis.sql.OfficeTestExamDetailMapper.selectByPrimaryKey" column="id">  </collection>  
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      	<if test="accessString!=null"> 	 <![CDATA[ ${accessString} ]]>  </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content, OptionOne, OptionTwo,OptionThree,OptionFour,OptionFive,Answer,Point,Remark,client_id,org_id,user_id ,user_name ,created 
    ,createdBy ,createdByName ,updated ,updatedBy ,updatedByName ,testbank_id ,type_id ,category_id 
  </sql>
  
	<select id="selectNameById"  resultType="java.lang.String" parameterType="java.lang.Integer"  >
	   select name from Office_TestQuestion where id = #{id,jdbcType=INTEGER}
	</select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <if test="topnumber!=null" >
       ${topnumber}
    </if>        
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <if test="columns != null" >
        ${columns}
    </if>
    
    <if test="columns == null" >
       <include refid="Base_Column_List" />
    </if>    
    
    from Office_TestQuestion
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
    
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Office_TestQuestion
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByParm" resultMap="BaseResultMap" parameterType="java.util.Map" >
    <if test="customSelect != null" >
      ${customSelect}
    </if>
    <if test="orderBy != null" >
      ${orderBy}
    </if>
  </select>
  
  <delete id="deleteByPrimaryKey"  parameterType="java.lang.Integer" >
    delete from Office_TestQuestion
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from Office_TestQuestion
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.officeTest.model.OfficeTestQuestion" useGeneratedKeys="true" keyProperty="id" >
    insert into Office_TestQuestion (content, OptionOne, OptionTwo,OptionThree,OptionFour,OptionFive,Answer,Point,Remark,
    client_id,org_id,user_id ,user_name ,created 
    ,createdBy ,createdByName ,updated ,updatedBy ,updatedByName ,testbank_id ,type_id ,category_id )
    
    values (#{content,jdbcType=NVARCHAR}, #{optionOne,jdbcType=NVARCHAR}, #{optionTwo,jdbcType=NVARCHAR}, #{optionThree,jdbcType=NVARCHAR}
    , #{optionFour,jdbcType=NVARCHAR}, #{optionFive,jdbcType=NVARCHAR}, #{answer,jdbcType=NVARCHAR}, #{point,jdbcType=INTEGER}
    , #{remark,jdbcType=NVARCHAR}, #{clientId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},#{userName,jdbcType=NVARCHAR}
    , #{created,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER}, #{createdByName,jdbcType=NVARCHAR}, #{updated,jdbcType=TIMESTAMP}
    , #{updatedBy,jdbcType=INTEGER}, #{updatedByName,jdbcType=NVARCHAR}, #{testBankId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}
    , #{categoryId,jdbcType=INTEGER}
      )
  </insert>
  
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from Office_TestQuestion
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.delmar.officeTest.model.OfficeTestQuestion" >
    update Office_TestQuestion
    set content = #{content,jdbcType=NVARCHAR},
      OptionOne = #{optionOne,jdbcType=NVARCHAR},
     OptionTwo = #{optionTwo,jdbcType=NVARCHAR}, 
     OptionThree = #{optionThree,jdbcType=NVARCHAR}, 
     OptionFour = #{optionFour,jdbcType=NVARCHAR}, 
     OptionFive = #{optionFive,jdbcType=NVARCHAR}, 
     Answer = #{answer,jdbcType=NVARCHAR},
     Point = #{point,jdbcType=INTEGER},
     remark = #{remark,jdbcType=NVARCHAR}, 
     client_id = #{clientId,jdbcType=INTEGER}, 
     org_id = #{orgId,jdbcType=INTEGER}, 
     user_id = #{userId,jdbcType=INTEGER}, 
     user_name = #{userName,jdbcType=NVARCHAR}, 
     created = #{created,jdbcType=TIMESTAMP}, 
     createdBy = #{createdBy,jdbcType=INTEGER}, 
     createdByName = #{createdByName,jdbcType=NVARCHAR}, 
     updated = #{updated,jdbcType=TIMESTAMP}, 
     updatedBy = #{updatedBy,jdbcType=INTEGER}, 
     updatedByName = #{updatedByName,jdbcType=NVARCHAR},
      testbank_id = #{testBankId,jdbcType=INTEGER}, 
     type_id = #{typeId,jdbcType=INTEGER}, 
     category_id = #{categoryId,jdbcType=INTEGER
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.officeTest.model.OfficeTestQuestion" >
    update Office_TestQuestion
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=NVARCHAR},
      </if>
      <if test="optionOne != null" >
        OptionOne = #{optionOne,jdbcType=NVARCHAR},
      </if>
      <if test="optionTwo != null" >
        OptionTwo = #{optionTwo,jdbcType=NVARCHAR},
      </if>      
      <if test="optionThree != null" >
        OptionThree = #{optionThree,jdbcType=NVARCHAR},
      </if>
      <if test="optionFour != null" >
        OptionFour = #{optionFour,jdbcType=NVARCHAR},
      </if>
      <if test="optionFive != null" >
        OptionFive = #{optionFive,jdbcType=NVARCHAR},
      </if>            
      <if test="answer != null" >
        Answer = #{answer,jdbcType=NVARCHAR},
      </if>
      <if test="point != null" >
        Point = #{point,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=NVARCHAR},
      </if>

      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=NVARCHAR},
      </if>      
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        createdBy = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdByName != null" >
        createdByName = #{createdByName,jdbcType=NVARCHAR},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updatedBy = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="updatedByName != null" >
        updatedByName = #{updatedByName,jdbcType=NVARCHAR},
      </if>   
      <if test="testBankId != null" >
        testbank_id = #{testBankId,jdbcType=INTEGER},
      </if> 
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if> 
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>       
      
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>