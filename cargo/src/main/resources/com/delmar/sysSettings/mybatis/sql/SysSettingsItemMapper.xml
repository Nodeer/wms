<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.sysSettings.mybatis.sql.SysSettingsItemMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.sysSettings.model.SysSettingsItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="value" property="value" jdbcType="NVARCHAR" />
    <result column="name" property="name" jdbcType="NVARCHAR" />
    <result column="set_level" property="setLevel" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="NVARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="NVARCHAR" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdBy" jdbcType="INTEGER" />
    <result column="createdByName" property="createdByName" jdbcType="NVARCHAR" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="updatedBy" property="updatedBy" jdbcType="INTEGER" />
    <result column="updatedByName" property="updatedByName" jdbcType="NVARCHAR" />
    <result column="set_type" property="setType" jdbcType="INTEGER" />
    <result column="indexOrder" property="indexOrder" jdbcType="INTEGER" />
    
    
    <collection property="sysSettingsItemTrls" select="com.delmar.sysSettings.mybatis.sql.SysSettingsItemTrlMapper.selectByFatherKey" column="id">  </collection> 
    <collection property="sysSettingsItemValues" select="com.delmar.sysSettings.mybatis.sql.SysSettingsItemValueMapper.selectByFatherKey" column="id">  </collection>   
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      	<if test="accessString!=null"> 	 <![CDATA[ ${accessString} ]]>  </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, value, name, set_level, remark, user_id, user_name, org_id, client_id, created, createdBy
    , createdByName, updated, updatedBy, updatedByName, set_type, indexOrder
   
  </sql>
  
	<select id="selectNameById"  resultType="java.lang.String" parameterType="java.lang.Integer"  >
	   select name from sys_settings_item where id = #{id,jdbcType=INTEGER}
	</select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <if test="topnumber!=null" >
       ${topnumber}
    </if>        
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <if test="columns != null" >
        ${columns}
    </if>
    
    <if test="columns == null" >
       <include refid="Base_Column_List" />
    </if>    
    
    from sys_settings_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
    
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_settings_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey"  parameterType="java.lang.Integer" >
    delete from sys_settings_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from sys_settings_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.sysSettings.model.SysSettingsItem" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_settings_item (value, name, set_level, remark, user_id, user_name, org_id, client_id, created, createdBy
    , createdByName, updated, updatedBy, updatedByName, set_type, indexOrder)
    values (#{value,jdbcType=NVARCHAR}, #{name,jdbcType=NVARCHAR}, 
      #{setLevel,jdbcType=INTEGER}, #{remark,jdbcType=NVARCHAR},
      #{userId,jdbcType=INTEGER},#{userName,jdbcType=NVARCHAR}, 
      #{orgId,jdbcType=INTEGER} ,#{clientId,jdbcType=INTEGER},
      #{created,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER},
      #{createdByName,jdbcType=NVARCHAR}, #{updated,jdbcType=TIMESTAMP},
      #{updatedBy,jdbcType=INTEGER}, #{updatedByName,jdbcType=NVARCHAR},
      #{setType,jdbcType=INTEGER},#{indexOrder,jdbcType=INTEGER})
      
  </insert>
  
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from sys_settings_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.delmar.sysSettings.model.SysSettingsItem" >
    update sys_settings_item
    set value = #{value,jdbcType=NVARCHAR}, 
    	name = #{name,jdbcType=NVARCHAR}, 
      	set_level = #{setLevel,jdbcType=INTEGER}, 
      	remark = #{remark,jdbcType=NVARCHAR}, 
      	user_id = #{userId,jdbcType=INTEGER},
      	user_name = #{userName,jdbcType=NVARCHAR}, 
      	org_id = #{orgId,jdbcType=INTEGER},
      	client_id = #{clientId,jdbcType=INTEGER}, 
      	created = #{created,jdbcType=TIMESTAMP}, 
      	createdBy = #{createdBy,jdbcType=INTEGER},
      	createdByName = #{createdByName,jdbcType=NVARCHAR}, 
      	updated = #{updated,jdbcType=TIMESTAMP},
      	updatedBy = #{updatedBy,jdbcType=INTEGER}, 
      	updatedByName = #{updatedByName,jdbcType=NVARCHAR},
      	set_type = #{setType,jdbcType=INTEGER},
      	indexOrder = #{indexOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.sysSettings.model.SysSettingsItem" >
    update sys_settings_item
    <set >
      <if test="value != null" >
        value = #{value,jdbcType=NVARCHAR}, 
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=NVARCHAR}, 
      </if>
      <if test="setLevel != null" >
        set_level = #{setLevel,jdbcType=INTEGER}, 
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=NVARCHAR}, 
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER}, 
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=NVARCHAR}, 
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER}, 
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP}, 
      </if>
      <if test="createdBy != null" >
        createdBy = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdByName != null" >
        createdByName = #{createdByName,jdbcType=NVARCHAR},  
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
       <if test="updatedBy != null" >
        updatedBy = #{updatedBy,jdbcType=INTEGER}, 
      </if>
       <if test="updatedByName != null" >
        updatedByName = #{updatedByName,jdbcType=NVARCHAR},
      </if>
      <if test="setType != null" >
        set_type = #{setType,jdbcType=INTEGER},
      </if>
      <if test="indexOrder != null" >
        indexOrder = #{indexOrder,jdbcType=INTEGER},
      </if>
      
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>