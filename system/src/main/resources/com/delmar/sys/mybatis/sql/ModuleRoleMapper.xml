<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.sys.mybatis.sql.ModuleRoleMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.sys.model.ModuleRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="data_filter_level"  property="dataFilterLevel" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
    	<if test="moduleId!=null"> and module_id=#{moduleId,jdbcType=INTEGER} </if>
        <if test="roleId!=null"> and role_id=#{roleId,jdbcType=INTEGER} </if>
        <if test="accessString!=null"> and ${accessString} </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, module_id, role_id,data_filter_level
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_module_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_module_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_module_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from sys_module_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.sys.model.ModuleRole" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_module_role (module_id, role_id,data_filter_level)
    values (#{moduleId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{dataFilterLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.delmar.sys.model.ModuleRole" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_module_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="dataFilterLevel != null" >
        data_filter_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="dataFilterLevel != null" >
        #{dataFilterLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from sys_module_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.sys.model.ModuleRole" >
    update sys_module_role
    <set >
      <if test="moduleId != null" >
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="dataFilterLevel != null" >
       data_filter_level = #{dataFilterLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delmar.sys.model.ModuleRole" >
    update sys_module_role
    set module_id = #{moduleId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      data_filter_level = #{dataFilterLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>