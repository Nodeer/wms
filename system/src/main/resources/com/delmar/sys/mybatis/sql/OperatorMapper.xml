<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.delmar.sys.mybatis.sql.OperatorMapper" >
  <resultMap id="BaseResultMap" type="com.delmar.sys.model.Operator" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="NVARCHAR" />
    <result column="init" property="init" jdbcType="CHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <if test="searchString!=null"> and ${searchString}</if>
      <if test="accessString!=null"> and ${accessString}</if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, value, name, remark,init
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_operator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_operator
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_operator
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map" >
    delete from sys_operator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.delmar.sys.model.Operator" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_operator (value, name, remark,init
      )
    values (#{value,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=NVARCHAR},#{init,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.delmar.sys.model.Operator" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_operator
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="value != null" >
        value,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="init != null" >
        init,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=NVARCHAR},
      </if>
      <if test="init != null" >
        #{init,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
    select count(*) from sys_operator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.sys.model.Operator" >
    update sys_operator
    <set >
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=NVARCHAR},
      </if>
        <if test="init != null" >
        init = #{init,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delmar.sys.model.Operator" >
    update sys_operator
    set value = #{value,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=NVARCHAR},
      init = #{init,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>