<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.delmar.sys.mybatis.sql.UserSessionMapper">
  <resultMap id="BaseResultMap" type="com.delmar.sys.model.UserSession">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="session_id" jdbcType="VARCHAR" property="sessionId" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="logout_date" jdbcType="TIMESTAMP" property="logoutDate" />
    <result column="remote_addr" jdbcType="VARCHAR" property="remoteAddr" />
    <result column="remote_host" jdbcType="VARCHAR" property="remoteHost" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
          <if test="accessString!=null"> ${accessString} </if>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, session_id, login_date, logout_date, remote_addr, remote_host, created, 
    updated
  </sql>
  <select id="selectByPaging"  parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_user_session
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_user_session
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user_session
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user_session
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map">
    delete from sys_user_session
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.delmar.sys.model.UserSession" useGeneratedKeys="true">
    insert into sys_user_session (user_id, session_id, login_date, 
      logout_date, remote_addr, remote_host, 
      created, updated)
    values (#{userId,jdbcType=INTEGER}, #{sessionId,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, 
      #{logoutDate,jdbcType=TIMESTAMP}, #{remoteAddr,jdbcType=VARCHAR}, #{remoteHost,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.delmar.sys.model.UserSession" useGeneratedKeys="true">
    insert into sys_user_session
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="sessionId != null">
        session_id,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="logoutDate != null">
        logout_date,
      </if>
      <if test="remoteAddr != null">
        remote_addr,
      </if>
      <if test="remoteHost != null">
        remote_host,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sessionId != null">
        #{sessionId,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutDate != null">
        #{logoutDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remoteAddr != null">
        #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="remoteHost != null">
        #{remoteHost,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from sys_user_session
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.delmar.sys.model.UserSession">
    update sys_user_session
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sessionId != null">
        session_id = #{sessionId,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutDate != null">
        logout_date = #{logoutDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remoteAddr != null">
        remote_addr = #{remoteAddr,jdbcType=VARCHAR},
      </if>
      <if test="remoteHost != null">
        remote_host = #{remoteHost,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delmar.sys.model.UserSession">
    update sys_user_session
    set user_id = #{userId,jdbcType=INTEGER},
      session_id = #{sessionId,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      logout_date = #{logoutDate,jdbcType=TIMESTAMP},
      remote_addr = #{remoteAddr,jdbcType=VARCHAR},
      remote_host = #{remoteHost,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
 	<select id="getPreLoginSession" parameterType="int" resultMap="BaseResultMap" useCache="true">
		SELECT TOP (1)  * FROM sys_user_session where USER_ID = #{value}  order by  login_date desc
	
	</select>
</mapper>